# 2. Country breakdown (latest year)
latest_year <- max(eac_annual$Year)
country_breakdown <- eac_annual %>%
filter(Year == latest_year) %>%
mutate(Share = Exports/sum(Exports))
ggplot(country_breakdown, aes(x = reorder(Country, Exports), y = Exports)) +
geom_col(fill = "#2c7bb6", width = 0.8) +
geom_text(aes(label = scales::percent(Share, accuracy = 1)),
hjust = -0.1, size = 3.5) +
coord_flip() +
labs(title = paste("EAC Export Distribution", latest_year),
subtitle = "Percentage share of total EAC exports",
y = "Exports (US$ Millions)",
x = "") +
theme_economist()
# 3. Country-specific trends
ggplot(eac_annual, aes(x = Year, y = Exports, color = Country)) +
geom_line(linewidth = 1) +
geom_point(size = 2) +
labs(title = "Export Trends to Individual EAC Countries",
y = "Exports (US$ Millions)",
x = "") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(legend.position = "bottom")
# 4. Export composition table (latest 3 years)
eac_annual %>%
filter(Year >= max(Year) - 2) %>%
pivot_wider(names_from = Year, values_from = Exports) %>%
arrange(desc(.[[3]])) %>%  # Sort by latest year
mutate(across(where(is.numeric), ~ round(., 1)))
library(readxl)
library(tidyverse)
library(ggthemes)
library(janitor)
library(stringr)
# Define EAC member countries (verify exact names in your data)
eac_countries <- c("Kenya", "Tanzania", "Rwanda", "Burundi",
"South Sudan", "DRC")
# Read annual data --------------------------------------------------------
df_annual <- read_excel("./data/Direction-of-Trade_Exports.xlsx",
sheet = "Annual_CY",
skip = 5) %>%  # Adjust skip based on actual header rows
rename(Country = 1) %>%
filter(!is.na(Country)) %>%
# Convert to tidy format
pivot_longer(cols = -Country,
names_to = "Year",
values_to = "Exports") %>%
# Clean year column and convert exports to numeric
mutate(Year = as.numeric(gsub("\\D", "", Year)),  # Extract numeric year
Exports = as.numeric(Exports)) %>%
filter(!is.na(Exports))
df_annual_clean <- df_annual %>%
mutate(Country = str_trim(Country)) # Removing white space before and after country name
# Filter for EAC countries only
eac_annual <- df_annual_clean %>%
filter(Country %in% eac_countries)
View(eac_annual)
total_trend <- eac_annual %>%
group_by(Year) %>%
summarise(Total = sum(Exports, na.rm = TRUE))
ggplot(total_trend, aes(x = Year, y = Total)) +
geom_line(color = "#2c7bb6", linewidth = 1) +
geom_point(color = "#2c7bb6", size = 2.5) +
labs(title = "Uganda's Total Exports to EAC Countries",
subtitle = "Annual Trend (Calendar Years)",
y = "Exports (US$ Millions)",
x = "") +
scale_x_continuous(breaks = seq(min(total_trend$Year), max(total_trend$Year), 2)) +
theme_fivethirtyeight()
# 2. Country breakdown (latest year)
latest_year <- max(eac_annual$Year)
country_breakdown <- eac_annual %>%
filter(Year == latest_year) %>%
mutate(Share = Exports/sum(Exports))
ggplot(country_breakdown, aes(x = reorder(Country, Exports), y = Exports)) +
geom_col(fill = "#2c7bb6", width = 0.8) +
geom_text(aes(label = scales::percent(Share, accuracy = 1)),
hjust = -0.1, size = 3.5) +
coord_flip() +
labs(title = paste("EAC Export Distribution", latest_year),
subtitle = "Percentage share of total EAC exports",
y = "Exports (US$ Millions)",
x = "") +
theme_economist()
View(country_breakdown)
View(country_breakdown)
write.csv(country_breakdown, file="./data/ug-exports-2024.csv")
write.csv(country_breakdown, file="./data/ug-exports-2024.csv", row.names = FALSE)
library(tidyverse)
library(grid)
library(png)
library(cowplot)
# Load your logo
logo_path <- "./assets/BKA_Logo_Feb2025.png"
logo_img <- readPNG(logo_path)
logo_grob <- rasterGrob(logo_img, interpolate = TRUE)
# Load data
df <- data.frame(
Country = c("Burundi", "Tanzania", "Rwanda", "DRC", "South Sudan", "Kenya"),
Exports = c(70.21, 137.08, 245.04, 446.94, 449.97, 549.96)
)
df$Country <- factor(df$Country, levels = df$Country)
# Main plot
main_plot <- ggplot(df, aes(x = Exports, y = Country)) +
geom_col(fill = "#005587") +
geom_text(aes(label = paste0("$", round(Exports), "M")),
hjust = -0.05, size = 3.5, family = "sans") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
theme_minimal(base_family = "sans") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(color = "grey80"),
axis.title = element_blank(),
axis.text = element_text(color = "black"),
plot.margin = margin(10, 10, 10, 10)
)
# Top row: logo, title, bold line
top_row <- ggdraw() +
draw_line(x = c(0, 1), y = c(1, 1), size = 2, color = "#000000") +  # Top border line
draw_grob(logo_grob, x = 0, y = 0.92, width = 0.15, hjust = 0, vjust = 1) +  # Logo
draw_label("Uganda’s Exports to East African Community (2024)",
fontface = 'bold', size = 14, x = 0.5, y = 0.55, hjust = 0.5)
# Subtitle row
subtitle_row <- ggdraw() +
draw_label("Exports reported in USD millions | Calendar year 2024",
x = 0.5, y = 0.5, hjust = 0.5, size = 10, color = "gray30")
# Source row
bottom_row <- ggdraw() +
draw_label("Source: Uganda Bureau of Statistics (UBOS)",
x = 0, hjust = 0, vjust = 0, size = 9, color = "grey40")
# Combine layout
final_plot <- plot_grid(
top_row,
subtitle_row,
main_plot,
bottom_row,
ncol = 1,
rel_heights = c(0.13, 0.07, 1, 0.08)
)
# Display the plot
print(final_plot)
# Load your logo
logo_path <- "./assets/BKA_Logo_Apr2025.png"
logo_img <- readPNG(logo_path)
logo_grob <- rasterGrob(logo_img, interpolate = TRUE)
df <- data.frame(
Country = c("Burundi", "Tanzania", "Rwanda", "DRC", "South Sudan", "Kenya"),
Exports = c(70.21, 137.08, 245.04, 446.94, 449.97, 549.96)
)
df$Country <- factor(df$Country, levels = df$Country)
# Main plot
main_plot <- ggplot(df, aes(x = Exports, y = Country)) +
geom_col(fill = "#005587") +
geom_text(aes(label = paste0("$", round(Exports), "M")),
hjust = -0.05, size = 3.5, family = "sans") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
theme_minimal(base_family = "sans") +
theme(
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(color = "grey80"),
axis.title = element_blank(),
axis.text = element_text(color = "black"),
plot.margin = margin(10, 10, 10, 10)
)
# Top row: logo, title, bold line
top_row <- ggdraw() +
draw_line(x = c(0, 1), y = c(1, 1), size = 2, color = "#000000") +  # Top border line
draw_grob(logo_grob, x = 0, y = 0.92, width = 0.15, hjust = 0, vjust = 1) +  # Logo
draw_label("Uganda’s Exports to East African Community (2024)",
fontface = 'bold', size = 14, x = 0.5, y = 0.55, hjust = 0.5)
# Subtitle row
subtitle_row <- ggdraw() +
draw_label("Exports reported in USD millions | Calendar year 2024",
x = 0.5, y = 0.5, hjust = 0.5, size = 10, color = "gray30")
# Source row
bottom_row <- ggdraw() +
draw_label("Source: Uganda Bureau of Statistics (UBOS)",
x = 0, hjust = 0, vjust = 0, size = 9, color = "grey40")
# Combine layout
final_plot <- plot_grid(
top_row,
subtitle_row,
main_plot,
bottom_row,
ncol = 1,
rel_heights = c(0.13, 0.07, 1, 0.08)
)
# Display the plot
print(final_plot)
# Display the plot
print(final_plot)
# ggsave("uganda_exports_tufte.png", final_plot, width = 9, height = 6, dpi = 300)
library(tidyverse)
library(grid)
library(png)
library(cowplot)
logo_path <- "./assets/BKA_Logo_Apr2025.png"
logo_img <- readPNG(logo_path)
logo_grob <- rasterGrob(logo_img, interpolate = TRUE)
df <- data.frame(
Country = c("Burundi", "Tanzania", "Rwanda", "DRC", "South Sudan", "Kenya"),
Exports = c(70.21, 137.08, 245.04, 446.94, 449.97, 549.96)
)
# Sort data from highest to lowest for better visual perception
df <- df[order(df$Exports), ]
df$Country <- factor(df$Country, levels = df$Country)
# Calculate subtle reference lines at meaningful intervals
value_max <- max(df$Exports)
tick_interval <- 100  # Meaningful interval for this data
ticks <- seq(0, ceiling(value_max/tick_interval)*tick_interval, by = tick_interval)
# Define a subtle color palette - use muted colors that don't overwhelm the data
main_color <- "#4575b4"  # A muted blue that's professional but not too bright
# Main plot - applying Tufte principles
main_plot <- ggplot(df, aes(x = Exports, y = Country)) +
# Simple bars with reduced emphasis
geom_col(fill = main_color, alpha = 0.8, width = 0.7) +
# Direct data labeling instead of requiring a legend or visual inference
geom_text(aes(label = paste0("$", round(Exports), "M")),
hjust = -0.2, size = 3, family = "sans", color = "gray20") +
# Add subtle, meaningful reference lines
geom_vline(xintercept = ticks, color = "gray90", size = 0.3) +
# Expand axis just enough to show labels
scale_x_continuous(
expand = expansion(mult = c(0, 0.12)),
position = "top",  # Move scale to top as per Tufte's recommendation
breaks = ticks,
labels = paste0("$", ticks, "M")
) +
# Minimalist theme inspired by Tufte's principles
theme_minimal(base_family = "sans") +
theme(
# Remove unnecessary grid lines
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),  # Remove grid lines
# Remove borders
panel.border = element_blank(),
axis.line = element_blank(),
# Subtle axis text
axis.text = element_text(color = "gray20", size = 9),
axis.title = element_blank(),  # Remove axis titles as they're self-evident
# Clean margins
plot.margin = margin(5, 15, 5, 5),
# Align y-axis labels right to the data
axis.text.y = element_text(hjust = 1, margin = margin(r = 5))
)
# Create a minimalist container - just enough context, no decorative elements
# Remove unnecessary elements like the heavy border line
# Title with clear hierarchy
title_text <- "Uganda's Exports to East African Community (2024)"
subtitle_text <- "Values in millions USD"
caption_text <- "Source: Uganda Bureau of Statistics (UBOS), 2024"
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Small logo in corner, if brand identity is essential
draw_grob(logo_grob, x = 0.03, y = 0.97, width = 0.08, hjust = 0, vjust = 1) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.05, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.1, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.02, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.08, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.01, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.005, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
title_text <- "Uganda's Formal Trade Exports to East African Community (2024)"
subtitle_text <- "Values in millions USD"
caption_text <- "Source: Central Bank of Uganda, 2024"
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.005, width = 0.12, hjust = 1, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
title_text <- "Uganda's Exports to East African Community (2024)"
subtitle_text <- "Values in millions USD"
caption_text <- "Source: Central Bank of Uganda | Formal Trade | 2024"
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.005, width = 0.12, hjust = 1.5, vjust = 0) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.005, width = 0.12, hjust = 1, vjust = 0.5) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.005, width = 0.12, hjust = 1, vjust = 0.4) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.01, width = 0.12, hjust = 1, vjust = 0.4) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
# Display the plot
print(final_plot)
# Optional save with appropriate dimensions
ggsave("uganda_exports_tufte.png", final_plot, width = 9, height = 6, dpi = 300)
library(grid)
library(tidyverse)
library(shadowtext)
names <- c(
"Hantavirus", "Tularemia", "Dengue", "Ebola", "E. coli",
"Tuberculosis", "Salmonella", "Vaccinia", "Brucella"
)
# Name is an ordered factor. We do this to ensure the bars are sorted.
data <- data.frame(
count = c(6, 7, 7, 9, 11, 15, 17, 18, 54),
name = factor(names, levels = names),
y = seq(length(names)) * 0.9
)
View(data)
View(data)
View(data)
BLUE <- "#076fa2"
RED <- "#E3120B"
BLACK <- "#202020"
GREY <- "grey50"
plt <- ggplot(data) +
geom_col(aes(count, name), fill = BLUE, width = 0.6)
plt
plt
library(tidyverse)
library(grid)
library(png)
library(cowplot)
logo_path <- "./assets/BKA_Logo_Apr2025.png"
logo_img <- readPNG(logo_path)
logo_grob <- rasterGrob(logo_img, interpolate = TRUE)
# Load and prepare data - sort by value for better visual perception
df <- data.frame(
Country = c("Burundi", "Tanzania", "Rwanda", "DRC", "South Sudan", "Kenya"),
Exports = c(70.21, 137.08, 245.04, 446.94, 449.97, 549.96)
)
# Sort data from highest to lowest for better visual perception
df <- df[order(df$Exports), ]
# Calculate subtle reference lines at meaningful intervals
value_max <- max(df$Exports)
tick_interval <- 100  # Meaningful interval for this data
ticks <- seq(0, ceiling(value_max/tick_interval)*tick_interval, by = tick_interval)
# Define a subtle color palette - use muted colors that don't overwhelm the data
main_color <- "#4575b4"  # A muted blue that's professional but not too bright
# Main plot - applying Tufte principles
main_plot <- ggplot(df, aes(x = Exports, y = Country)) +
# Simple bars with reduced emphasis
geom_col(fill = main_color, alpha = 0.8, width = 0.7) +
# Direct data labeling instead of requiring a legend or visual inference
geom_text(aes(label = paste0("$", round(Exports), "M")),
hjust = -0.2, size = 3, family = "sans", color = "gray20") +
# Add subtle, meaningful reference lines
geom_vline(xintercept = ticks, color = "gray90", size = 0.3) +
# Expand axis just enough to show labels
scale_x_continuous(
expand = expansion(mult = c(0, 0.12)),
position = "top",  # Move scale to top as per Tufte's recommendation
breaks = ticks,
labels = paste0("$", ticks, "M")
) +
# Minimalist theme inspired by Tufte's principles
theme_minimal(base_family = "sans") +
theme(
# Remove unnecessary grid lines
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),  # Remove grid lines
# Remove borders
panel.border = element_blank(),
axis.line = element_blank(),
# Subtle axis text
axis.text = element_text(color = "gray20", size = 9),
axis.title = element_blank(),  # Remove axis titles as they're self-evident
# Clean margins
plot.margin = margin(5, 15, 5, 5),
# Align y-axis labels right to the data
axis.text.y = element_text(hjust = 1, margin = margin(r = 5))
)
main_plot
title_text <- "Uganda's Exports to East African Community (2024)"
subtitle_text <- "Values in millions USD"
caption_text <- "Source: Central Bank of Uganda | Formal Trade | 2024"
# Complete visualization with minimal framing
final_plot <- ggdraw() +
# Logo in bottom right, with increased size for better visibility
draw_grob(logo_grob, x = 0.95, y = 0.01, width = 0.12, hjust = 1, vjust = 0.4) +
# Clear but unobtrusive title with hierarchy
draw_label(title_text, fontface = 'bold', size = 14, x = 0.03, y = 0.95, hjust = 0) +
draw_label(subtitle_text, size = 10, color = "gray40", x = 0.03, y = 0.92, hjust = 0) +
# Main data - the focus of the visualization
draw_plot(main_plot, x = 0, y = 0.05, width = 1, height = 0.85) +
# Minimal source attribution
draw_label(caption_text, size = 8, color = "gray40", x = 0.03, y = 0.02, hjust = 0)
final_plot
